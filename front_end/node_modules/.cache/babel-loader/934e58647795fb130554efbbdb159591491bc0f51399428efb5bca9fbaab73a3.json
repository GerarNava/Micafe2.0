{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\OCTAVO SEMESTRE\\\\MicafeUmes2.0\\\\front-end\\\\front_end\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Lógica para obtener el usuario actual, por ejemplo, desde un token almacenado en localStorage\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    console.log('Stored user:', storedUser);\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        // Almacena el usuario en el estado y localStorage\n        const loggedInUser = {\n          id: data.id,\n          name: data.name\n        }; // Reemplaza con la estructura real de tu usuario\n        setUser(loggedInUser);\n        localStorage.setItem('user', JSON.stringify(loggedInUser));\n\n        // Devuelve el usuario o cualquier otro dato que puedas necesitar\n        return loggedInUser;\n        throw new Error(`Error al enviar el pedido: ${response.status} ${response.statusText}`);\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Ocurrió un error durante el inicio de sesión.');\n      }\n    } catch (error) {\n      // Manejar errores de conexión o servidor\n      console.error('Error en la solicitud:', error);\n      throw new Error('Ocurrió un error durante el inicio de sesión. Por favor, intenta de nuevo.');\n    }\n  };\n  const logout = () => {\n    // Lógica para cerrar sesión y limpiar el estado\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const authContext = useContext(AuthContext);\n  if (!authContext) {\n    throw new Error('useAuth debe ser utilizado dentro de un AuthProvider');\n  }\n  const {\n    user,\n    login,\n    logout\n  } = authContext;\n  return {\n    user: user || null,\n    login,\n    logout\n  };\n};\n_s2(useAuth, \"g0q6N3HTsGa67OokMUhTOzE2a0M=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","console","log","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","data","json","ok","loggedInUser","id","name","setItem","Error","status","statusText","errorData","message","error","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","authContext","$RefreshReg$"],"sources":["D:/Documentos/OCTAVO SEMESTRE/MicafeUmes2.0/front-end/front_end/src/AuthContext.js"],"sourcesContent":["// AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  // Lógica para obtener el usuario actual, por ejemplo, desde un token almacenado en localStorage\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    console.log('Stored user:', storedUser);\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      });\n      const data = await response.json();\n      if (!response.ok) {\n       \n\n        // Almacena el usuario en el estado y localStorage\n        const loggedInUser = { id: data.id, name: data.name }; // Reemplaza con la estructura real de tu usuario\n        setUser(loggedInUser);\n        localStorage.setItem('user', JSON.stringify(loggedInUser));\n\n        // Devuelve el usuario o cualquier otro dato que puedas necesitar\n        return loggedInUser;\n        throw new Error(`Error al enviar el pedido: ${response.status} ${response.statusText}`);\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Ocurrió un error durante el inicio de sesión.');\n      }\n    } catch (error) {\n      // Manejar errores de conexión o servidor\n      console.error('Error en la solicitud:', error);\n      throw new Error('Ocurrió un error durante el inicio de sesión. Por favor, intenta de nuevo.');\n    }\n  };\n\n  const logout = () => {\n    // Lógica para cerrar sesión y limpiar el estado\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const authContext = useContext(AuthContext);\n\n  if (!authContext) {\n    throw new Error('useAuth debe ser utilizado dentro de un AuthProvider');\n  }\n\n  const { user, login, logout } = authContext;\n\n  return { user: user || null, login, logout };\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}