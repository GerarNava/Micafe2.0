{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\OCTAVO SEMESTRE\\\\MicafeUmes2.0\\\\Micafe\\\\front_end\\\\src\\\\pages\\\\Carrito.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ... (código anterior)\n\nexport const Carrito = ({\n  carrito,\n  setCarrito\n}) => {\n  _s();\n  // ... (código anterior)\n\n  const [nombreCliente, setNombreCliente] = useState('');\n  const [observaciones, setObservaciones] = useState('');\n\n  // ... (código anterior)\n\n  const enviarPedido = async () => {\n    // Validación del nombre\n    if (!nombreCliente) {\n      alert('Por favor, ingrese su nombre antes de enviar el pedido.');\n      return;\n    }\n    const fechaActual = new Date().toISOString();\n    const formData = new FormData();\n    formData.append('n_order', numeroOrden);\n    formData.append('user', clienteId);\n    formData.append('nombre_cliente', nombreCliente); // Nuevo campo para el nombre\n    formData.append('observaciones', observaciones); // Nuevo campo para observaciones\n    formData.append('description', carritoLocal.map(producto => `${producto.nombre} (${producto.cantidad})`).join(', '));\n    formData.append('quantity', '1');\n    formData.append('total_price', total);\n    formData.append('created_at', fechaActual);\n\n    // Imprime los datos antes de hacer la solicitud\n    console.log('Datos a enviar:', Object.fromEntries(formData.entries()));\n    try {\n      const response = await fetch('http://localhost:8000/api/orders/create/', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Pedido enviado con éxito');\n        // Puedes realizar acciones adicionales después de enviar el pedido si es necesario\n      } else {\n        console.error('Error al enviar el pedido:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error de red:', error);\n    }\n    setCarrito([]);\n    setTotal(0);\n    setNumeroOrden(null);\n    setCarritoLocal([]);\n    setNombreCliente(''); // Limpiar el campo después de enviar el pedido\n    setObservaciones(''); // Limpiar el campo después de enviar el pedido\n  };\n\n  // ... (código anterior)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carrito-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Carrito de Compras\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nombreCliente\",\n        children: \"Nombre Cliente:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"nombreCliente\",\n        value: nombreCliente,\n        onChange: e => setNombreCliente(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"observaciones\",\n        children: \"Observaciones:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"observaciones\",\n        value: observaciones,\n        onChange: e => setObservaciones(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"carrito-table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"carrito-total\",\n        children: [\"Total: Q\", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Carrito, \"0ATt7iCl5fK+/ks2eOa0KXO3SbE=\");\n_c = Carrito;\nvar _c;\n$RefreshReg$(_c, \"Carrito\");","map":{"version":3,"names":["Carrito","carrito","setCarrito","_s","nombreCliente","setNombreCliente","useState","observaciones","setObservaciones","enviarPedido","alert","fechaActual","Date","toISOString","formData","FormData","append","numeroOrden","clienteId","carritoLocal","map","producto","nombre","cantidad","join","total","console","log","Object","fromEntries","entries","response","fetch","method","body","ok","error","statusText","setTotal","setNumeroOrden","setCarritoLocal","_jsxDEV","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["D:/Documentos/OCTAVO SEMESTRE/MicafeUmes2.0/Micafe/front_end/src/pages/Carrito.js"],"sourcesContent":["// ... (código anterior)\n\nexport const Carrito = ({ carrito, setCarrito }) => {\n  // ... (código anterior)\n\n  const [nombreCliente, setNombreCliente] = useState('');\n  const [observaciones, setObservaciones] = useState('');\n\n  // ... (código anterior)\n\n  const enviarPedido = async () => {\n    // Validación del nombre\n    if (!nombreCliente) {\n      alert('Por favor, ingrese su nombre antes de enviar el pedido.');\n      return;\n    }\n\n    const fechaActual = new Date().toISOString();\n\n    const formData = new FormData();\n    formData.append('n_order', numeroOrden);\n    formData.append('user', clienteId);\n    formData.append('nombre_cliente', nombreCliente); // Nuevo campo para el nombre\n    formData.append('observaciones', observaciones); // Nuevo campo para observaciones\n    formData.append('description', carritoLocal.map((producto) => `${producto.nombre} (${producto.cantidad})`).join(', '));\n    formData.append('quantity', '1');\n    formData.append('total_price', total);\n    formData.append('created_at', fechaActual);\n\n    // Imprime los datos antes de hacer la solicitud\n    console.log('Datos a enviar:', Object.fromEntries(formData.entries()));\n\n    try {\n      const response = await fetch('http://localhost:8000/api/orders/create/', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        console.log('Pedido enviado con éxito');\n        // Puedes realizar acciones adicionales después de enviar el pedido si es necesario\n      } else {\n        console.error('Error al enviar el pedido:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error de red:', error);\n    }\n\n    setCarrito([]);\n    setTotal(0);\n    setNumeroOrden(null);\n    setCarritoLocal([]);\n    setNombreCliente(''); // Limpiar el campo después de enviar el pedido\n    setObservaciones(''); // Limpiar el campo después de enviar el pedido\n  };\n\n  // ... (código anterior)\n\n  return (\n    <div>\n      {/* ... (código anterior) */}\n      <div className=\"carrito-container\">\n        <h2>Carrito de Compras</h2>\n        <label htmlFor=\"nombreCliente\">Nombre Cliente:</label>\n        <input\n          type=\"text\"\n          id=\"nombreCliente\"\n          value={nombreCliente}\n          onChange={(e) => setNombreCliente(e.target.value)}\n          required\n        />\n        <label htmlFor=\"observaciones\">Observaciones:</label>\n        <textarea\n          id=\"observaciones\"\n          value={observaciones}\n          onChange={(e) => setObservaciones(e.target.value)}\n        />\n        <table className=\"carrito-table\">\n          {/* ... (código anterior) */}\n        </table>\n        <h3 className=\"carrito-total\">Total: Q{total}</h3>\n        {/* ... (código anterior) */}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}