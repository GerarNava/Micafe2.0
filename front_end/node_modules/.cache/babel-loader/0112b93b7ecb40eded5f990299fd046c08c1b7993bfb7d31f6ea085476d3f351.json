{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\OCTAVO SEMESTRE\\\\MicafeUmes2.0\\\\front-end\\\\front_end\\\\src\\\\pages\\\\categoria.js\",\n  _s = $RefreshSig$();\n// Categories.js\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // Asegúrate de tener React Router configurado\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Categoria = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    // Lógica para obtener la lista de categorías desde tu API\n    // Puedes usar fetch o axios, dependiendo de tu preferencia\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/categories'); // Ajusta la URL según tu configuración\n        if (response.ok) {\n          const data = await response.json();\n          setCategories(data);\n        } else {\n          console.error('Error al obtener categorías.');\n        }\n      } catch (error) {\n        console.error('Error en la solicitud:', error);\n      }\n    };\n    fetchCategoria();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Categor\\xEDas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/categories/${category.id}`,\n          children: category.category_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Categoria, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = Categoria;\nexport default Categoria;\nvar _c;\n$RefreshReg$(_c, \"Categoria\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Categoria","_s","categories","setCategories","fetchCategories","response","fetch","ok","data","json","console","error","fetchCategoria","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","to","id","category_name","_c","$RefreshReg$"],"sources":["D:/Documentos/OCTAVO SEMESTRE/MicafeUmes2.0/front-end/front_end/src/pages/categoria.js"],"sourcesContent":["// Categories.js\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // Asegúrate de tener React Router configurado\n\nconst Categoria = () => {\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    // Lógica para obtener la lista de categorías desde tu API\n    // Puedes usar fetch o axios, dependiendo de tu preferencia\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/categories');  // Ajusta la URL según tu configuración\n        if (response.ok) {\n          const data = await response.json();\n          setCategories(data);\n        } else {\n          console.error('Error al obtener categorías.');\n        }\n      } catch (error) {\n        console.error('Error en la solicitud:', error);\n      }\n    };\n\n    fetchCategoria();\n  }, []);\n\n  return (\n    <div>\n      <h1>Categorías</h1>\n      <ul>\n        {categories.map(category => (\n          <li key={category.id}>\n            <Link to={`/categories/${category.id}`}>\n              {category.category_name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Categoria;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAE;QACvE,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,aAAa,CAACK,IAAI,CAAC;QACrB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;QAC/C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA;MAAAc,QAAA,EACGX,UAAU,CAACgB,GAAG,CAACC,QAAQ,iBACtBpB,OAAA;QAAAc,QAAA,eACEd,OAAA,CAACF,IAAI;UAACuB,EAAE,EAAG,eAAcD,QAAQ,CAACE,EAAG,EAAE;UAAAR,QAAA,EACpCM,QAAQ,CAACG;QAAa;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC,GAHAE,QAAQ,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CArCID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}